MAIN.MAIN 1000
MAIN.MAIN;Main.main 1000
MAIN.MAIN;Main.main;Fichiers.sauvegarder 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.taille_fichier 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.bs 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.morceaux 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.morceaux;Fichiers.sauvegarder.morceaux.\ 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.morceaux;Fichiers.sauvegarder.morceaux.\;Poly.coeff 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.morceaux;Fichiers.sauvegarder.morceaux.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.morceaux;Fichiers.sauvegarder.morceaux.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.morceaux;Fichiers.sauvegarder.morceaux.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.morceaux;Fichiers.sauvegarder.morceaux.\;Fichiers.versOctets 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.morceaux;Fichiers.sauvegarder.morceaux.\;Fichiers.versOctets;Corps.fromEnum 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.morceaux;Fichiers.sauvegarder.morceaux.\;Fichiers.versOctets;Corps.fromEnum;Corps.fromEnum.somme 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.morceaux;Fichiers.sauvegarder.morceaux.\;Fichiers.versOctets;Fichiers.versOctets.octets 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.morceaux;Poly.maxDegree 0
MAIN.MAIN;Main.main;Fichiers.sauvegarder;Fichiers.sauvegarder.morceaux;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat 997
MAIN.MAIN;Main.main;Main.main.resultat;Code.decode 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction 997
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.o 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+ 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.\ 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.\;Corps.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.\;Poly.coeff 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.negate 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.negate;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.e 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.e;Code.polynome_erreurs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Corps.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Corps.+;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Corps.+;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Corps.+;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Corps.+;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Corps.+;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Corps.+;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Corps.+;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Poly.coeff;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Poly.coeff;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Poly.coeff;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Poly.coeff;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Code.derivee.derivee_monome;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.p;Code.derivee;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.u 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...) 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.negate 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.negate;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.recipCP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.reduce 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.recipCP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Code.erreurs.x;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.reduce 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.recipCP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Poly.evalP;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.reduce 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.recipCP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.errs;Code.erreurs;Code.erreurs.magnitude;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos 343
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions 343
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape 343
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.* 105
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.reduce 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.* 34
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly 34
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step 32
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 26
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 22
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 17
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 5
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale 6
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;CorpsPremier.* 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP 71
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl 71
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step 70
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.recipCP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr 69
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate 5
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift 18
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\ 9
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff 6
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m 6
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree 5
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 5
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale 7
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;CorpsPremier.* 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+ 38
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add 37
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\ 30
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff 24
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 7
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP 238
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Corps.fromInteger 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Corps.fromInteger;Corps.chiffres 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape 235
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.+ 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+ 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\ 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.* 233
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.reduce 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.* 93
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly 92
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step 85
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 70
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 57
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 44
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 12
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 3
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale 12
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;CorpsPremier.* 4
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0 6
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 6
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP 139
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl 138
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step 135
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t 3
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.recipCP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr 130
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate 11
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift 43
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\ 12
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff 10
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m 22
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree 21
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 17
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 10
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 3
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale 13
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;CorpsPremier.* 5
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+ 59
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add 57
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\ 44
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff 34
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 8
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Poly.evalP;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.== 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.==;Poly.== 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.==;Poly.==;Poly.==.\ 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.==;Poly.==;Poly.==.\;Poly.coeff 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.==;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.==;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.==;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.==;Poly.==;Poly.==.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.==;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.pos;Code.positions;Code.positions.etape;Corps.==;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.n 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.n;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.n;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.==;Poly.==.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.==;Poly.==.\;Corps.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.==;Poly.==.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...) 650
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.evaluateur 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.localisateur 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...) 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.\;Corps.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.negate 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.negate;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Corps.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Corps.+;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Corps.+;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Corps.+;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Corps.+;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Corps.+;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Corps.+;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Corps.+;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.reduce 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.recipCP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.==;Poly.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.==;Poly.==;Poly.==.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.==;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.==;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.==;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.==;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.==;Poly.==;Poly.==.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.==;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Corps.==;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.reduce 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;Corps.*;Poly.modP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Corps.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.recipCP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Poly.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.u 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...) 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.negate 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.negate;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.reduce 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Corps.*;Poly.modP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Corps.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Code.algoEuclideEtendu.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Poly.== 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.sugiyama;Code.sugiyama.(...);Code.algoEuclideEtendu;Code.algoEuclideEtendu.etape;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes 650
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\ 650
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.reduce 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP 649
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Corps.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape 649
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.+ 22
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+ 22
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add 22
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\ 21
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff 18
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 3
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.+;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.* 626
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.reduce 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.* 246
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly 246
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step 232
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 203
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 180
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 151
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 29
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 7
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale 27
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;CorpsPremier.* 12
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0 12
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 11
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 6
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP 379
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl 379
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree 6
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux 5
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff 3
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step 371
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t 3
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.recipCP 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.* 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr 366
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate 53
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift 90
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\ 59
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff 44
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 6
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m 18
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree 17
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 13
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 8
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 2
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale 20
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;CorpsPremier.* 9
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+ 200
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add 199
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\ 181
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff 158
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 23
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 7
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux 1
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.evalP.etape;Corps.*;Poly.modP;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Code.syndromes.\;Poly.evalP;Poly.toVector 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.(...);Code.syndromes;Poly.polyAvecCoeffs 0
MAIN.MAIN;Main.main;Main.main.resultat;Code.correction;Code.correction.l 0
MAIN.MAIN;Main.main;Fichiers.ouvrir 3
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.tampon 0
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p 3
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly 3
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly;Fichiers.bloc 3
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly;Fichiers.bloc;Fichiers.bloc.segment 0
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly;Fichiers.bloc;Fichiers.bloc.segment;Fichiers.bloc.aligner 0
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly;Fichiers.bloc;Fichiers.bloc.segment;Fichiers.alignement 0
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly;Fichiers.bloc;Fichiers.bloc.segment;Fichiers.n_blocs 0
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly;Fichiers.bloc;Fichiers.bloc.segment;Fichiers.n_blocs;Fichiers.alignement 0
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly;Fichiers.bloc;Fichiers.versGalois 3
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly;Fichiers.bloc;Fichiers.versGalois;Fichiers.versGalois.\ 0
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly;Fichiers.bloc;Fichiers.versGalois;Corps.toEnum 2
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly;Fichiers.bloc;Fichiers.versGalois;Corps.toEnum;Corps.fromInteger 2
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly;Fichiers.bloc;Fichiers.versGalois;Corps.toEnum;Corps.fromInteger;Corps.chiffres 2
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly;Fichiers.bloc;Fichiers.versGalois;Corps.toEnum;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 2
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Poly.genererPoly;Fichiers.bloc;Fichiers.versGalois;Corps.toEnum;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Fichiers.n_blocs 0
MAIN.MAIN;Main.main;Fichiers.ouvrir;Fichiers.ouvrir.p;Fichiers.n_blocs;Fichiers.alignement 0
MAIN.MAIN;Main.CAF:main1 0
MAIN.MAIN;Main.CAF:main1;Main.main 0
MAIN.MAIN;Main.CAF:lvl8_r5dc 0
MAIN.MAIN;Main.CAF:lvl8_r5dc;Main.main 0
MAIN.MAIN;Main.CAF:lvl8_r5dc;Main.main;Main.main.resultat 0
MAIN.MAIN;Main.CAF:lvl7_r5db 0
MAIN.MAIN;Main.CAF:lvl7_r5db;Main.main 0
MAIN.MAIN;Main.CAF:lvl7_r5db;Main.main;Main.main.resultat 0
MAIN.MAIN;Poly.CAF:$fEqPoly3 0
MAIN.MAIN;CorpsPremier.CAF:$fEqCP2 0
MAIN.MAIN;CorpsPremier.CAF:$fEqCP2;CorpsPremier.== 0
MAIN.MAIN;CorpsPremier.CAF:$fEqCP1 0
MAIN.MAIN;CorpsPremier.CAF:$fEqCP1;CorpsPremier./= 0
MAIN.MAIN;CorpsPremier.CAF:$fFractionalCP3 0
MAIN.MAIN;CorpsPremier.CAF:$fFractionalCP3;CorpsPremier.recip 0
MAIN.MAIN;CorpsPremier.CAF:$fNumCP_$cnegate 0
MAIN.MAIN;CorpsPremier.CAF:$fNumCP_$cnegate;CorpsPremier.negate 0
MAIN.MAIN;Corps.CAF:$fEqGalois1 0
MAIN.MAIN;Corps.CAF:$fEqGalois1;Corps./= 0
MAIN.MAIN;Corps.CAF:$fEqGalois2 0
MAIN.MAIN;Corps.CAF:$fEqGalois2;Corps.== 0
MAIN.MAIN;Corps.CAF:$fNumGalois_$cnegate 0
MAIN.MAIN;Corps.CAF:$fNumGalois_$cnegate;Corps.negate 0
MAIN.MAIN;Corps.CAF:degreeBase 0
MAIN.MAIN;Corps.CAF:degreeBase;Corps.degreeBase 0
MAIN.MAIN;Corps.CAF:prime 0
MAIN.MAIN;Corps.CAF:prime;Corps.prime 0
MAIN.MAIN;Corps.CAF:prime1 0
MAIN.MAIN;Corps.CAF:prime1;Corps.prime 0
MAIN.MAIN;Corps.CAF:prime3 0
MAIN.MAIN;Corps.CAF:prime3;Corps.prime 0
MAIN.MAIN;Corps.CAF:prime3;Corps.prime;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:$s^2 0
MAIN.MAIN;Code.CAF:$s^2;Corps.fromInteger 0
MAIN.MAIN;Code.CAF:$s^2;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Code.CAF:$s^2;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Code.CAF:$s^2;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_monome 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.\;Corps.fromInteger 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.\;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.\;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.\;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.== 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\ 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_monome;Code.sugiyama;Code.sugiyama.monome;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction9 0
MAIN.MAIN;Code.CAF:correction9;Code.sugiyama 0
MAIN.MAIN;Code.CAF:correction9;Code.sugiyama;Code.sugiyama.monome 0
MAIN.MAIN;Code.CAF:correction10 0
MAIN.MAIN;Code.CAF:correction10;Code.syndromes 0
MAIN.MAIN;Code.CAF:correction11 0
MAIN.MAIN;Code.CAF:correction11;Code.syndromes 0
MAIN.MAIN;Code.CAF:correction12 0
MAIN.MAIN;Code.CAF:correction12;Code.syndromes 0
MAIN.MAIN;Code.CAF:derivee1 0
MAIN.MAIN;Code.CAF:derivee1;Code.derivee 0
MAIN.MAIN;Code.CAF:derivee2 0
MAIN.MAIN;Code.CAF:derivee2;Code.derivee 0
MAIN.MAIN;Code.CAF:derivee3 0
MAIN.MAIN;Code.CAF:derivee3;Code.derivee 0
MAIN.MAIN;Code.CAF:correction3 0
MAIN.MAIN;Code.CAF:decode1 0
MAIN.MAIN;Code.CAF:decode1;Code.decode 0
MAIN.MAIN;Code.CAF:t 0
MAIN.MAIN;Code.CAF:t;Code.t 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu4 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu4;Code.algoEuclideEtendu 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu4;Code.algoEuclideEtendu;Poly.fromInteger 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu4;Code.algoEuclideEtendu;Poly.fromInteger;Poly.const 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu4;Code.algoEuclideEtendu;Poly.fromInteger;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu6 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu6;Code.algoEuclideEtendu 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu6;Code.algoEuclideEtendu;Poly.fromInteger 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu6;Code.algoEuclideEtendu;Poly.fromInteger;Corps.fromInteger 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu6;Code.algoEuclideEtendu;Poly.fromInteger;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu6;Code.algoEuclideEtendu;Poly.fromInteger;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu6;Code.algoEuclideEtendu;Poly.fromInteger;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu1 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu1;Code.algoEuclideEtendu 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu1;Code.algoEuclideEtendu;Poly.fromInteger 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu1;Code.algoEuclideEtendu;Poly.fromInteger;Poly.const 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu1;Code.algoEuclideEtendu;Poly.fromInteger;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu3 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu3;Code.algoEuclideEtendu 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu3;Code.algoEuclideEtendu;Poly.fromInteger 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu3;Code.algoEuclideEtendu;Poly.fromInteger;Corps.fromInteger 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu3;Code.algoEuclideEtendu;Poly.fromInteger;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu3;Code.algoEuclideEtendu;Poly.fromInteger;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Code.CAF:algoEuclideEtendu3;Code.algoEuclideEtendu;Poly.fromInteger;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.u 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...) 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.const 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.negate 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.negate;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.* 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.const 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.recipCP 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.* 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.const 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.== 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\ 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.m 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.const 0
MAIN.MAIN;Code.CAF:lvl1_rfWT;Code.erreurs;Code.erreurs.x;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:correction_beta 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.u 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...) 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.const 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.negate 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.negate;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.* 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;CorpsPremier.+ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.calculer_coeff;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.addWithShift;Poly.addWithShift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.step;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.multPoly.z0;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.*;Poly.multPoly;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.const 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.negate;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.scale;CorpsPremier.* 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.rr;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.recipCP 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.t;CorpsPremier.* 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.const 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.\;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.shift;Poly.shift.m;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.\;CorpsPremier.+ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.d 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.divEucl.step.qq;Poly.+;Poly.add;Poly.add.d;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.degree.aux;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.algoEuclide.etape.q;Poly.divEucl;Poly.divEucl.step;Poly.degree;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.== 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\ 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.\;Poly.coeff;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.m 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.m;Poly.maxDegree 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.==;Poly.==.m;Poly.maxDegree;Poly.toVector 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.const 0
MAIN.MAIN;Code.CAF:correction_beta;Code.positions;Code.positions.beta;Corps.recip;Corps.recip.(...);Poly.algoEuclide;Poly.algoEuclide.etape;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:correction2 0
MAIN.MAIN;Code.CAF:correction2;Code.positions 0
MAIN.MAIN;Code.CAF:correction2;Code.positions;Code.positions.etape 0
MAIN.MAIN;Code.CAF:correction2;Code.positions;Code.positions.etape;Corps.fromInteger 0
MAIN.MAIN;Code.CAF:correction2;Code.positions;Code.positions.etape;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Code.CAF:correction2;Code.positions;Code.positions.etape;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Code.CAF:correction2;Code.positions;Code.positions.etape;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction1 0
MAIN.MAIN;Code.CAF:correction1;Code.positions 0
MAIN.MAIN;Code.CAF:correction1;Code.positions;Corps.fromInteger 0
MAIN.MAIN;Code.CAF:correction1;Code.positions;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Code.CAF:correction1;Code.positions;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Code.CAF:correction1;Code.positions;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction7 0
MAIN.MAIN;Code.CAF:correction7;Code.sugiyama 0
MAIN.MAIN;Code.CAF:correction7;Code.sugiyama;Code.sugiyama.monome 0
MAIN.MAIN;Code.CAF:correction7;Code.sugiyama;Code.sugiyama.monome;Poly.const 0
MAIN.MAIN;Code.CAF:correction7;Code.sugiyama;Code.sugiyama.monome;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:correction8 0
MAIN.MAIN;Code.CAF:correction8;Code.sugiyama 0
MAIN.MAIN;Code.CAF:correction8;Code.sugiyama;Code.sugiyama.monome 0
MAIN.MAIN;Code.CAF:correction8;Code.sugiyama;Code.sugiyama.monome;Corps.fromInteger 0
MAIN.MAIN;Code.CAF:correction8;Code.sugiyama;Code.sugiyama.monome;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Code.CAF:correction8;Code.sugiyama;Code.sugiyama.monome;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Code.CAF:correction8;Code.sugiyama;Code.sugiyama.monome;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:a_rfWP 0
MAIN.MAIN;Code.CAF:a_rfWP;Code.polynome_erreurs 0
MAIN.MAIN;Code.CAF:a_rfWP;Code.polynome_erreurs;Corps.fromInteger 0
MAIN.MAIN;Code.CAF:a_rfWP;Code.polynome_erreurs;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Code.CAF:a_rfWP;Code.polynome_erreurs;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Code.CAF:a_rfWP;Code.polynome_erreurs;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:correction4 0
MAIN.MAIN;Code.CAF:correction4;Code.correction 0
MAIN.MAIN;Code.CAF:correction4;Code.correction;Poly.fromInteger 0
MAIN.MAIN;Code.CAF:correction4;Code.correction;Poly.fromInteger;Poly.const 0
MAIN.MAIN;Code.CAF:correction4;Code.correction;Poly.fromInteger;Poly.const;Poly.polyAvecCoeffs 0
MAIN.MAIN;Code.CAF:correction6 0
MAIN.MAIN;Code.CAF:correction6;Code.correction 0
MAIN.MAIN;Code.CAF:correction6;Code.correction;Poly.fromInteger 0
MAIN.MAIN;Code.CAF:correction6;Code.correction;Poly.fromInteger;Corps.fromInteger 0
MAIN.MAIN;Code.CAF:correction6;Code.correction;Poly.fromInteger;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Code.CAF:correction6;Code.correction;Poly.fromInteger;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Code.CAF:correction6;Code.correction;Poly.fromInteger;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:derivee4 0
MAIN.MAIN;Code.CAF:derivee4;Code.derivee 0
MAIN.MAIN;Code.CAF:derivee4;Code.derivee;Code.derivee.derivee_monome 0
MAIN.MAIN;Code.CAF:derivee4;Code.derivee;Code.derivee.derivee_monome;Corps.fromInteger 0
MAIN.MAIN;Code.CAF:derivee4;Code.derivee;Code.derivee.derivee_monome;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Code.CAF:derivee4;Code.derivee;Code.derivee.derivee_monome;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Code.CAF:derivee4;Code.derivee;Code.derivee.derivee_monome;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Code.CAF:alpha1 0
MAIN.MAIN;Code.CAF:alpha1;Code.alpha 0
MAIN.MAIN;Code.CAF:alpha1;Code.alpha;Corps.fromInteger 0
MAIN.MAIN;Code.CAF:alpha1;Code.alpha;Corps.fromInteger;Corps.chiffres 0
MAIN.MAIN;Code.CAF:alpha1;Code.alpha;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en 0
MAIN.MAIN;Code.CAF:alpha1;Code.alpha;Corps.fromInteger;Corps.chiffres;Corps.chiffres.chiffre_en;CorpsPremier.fromInteger 0
MAIN.MAIN;Fichiers.CAF:sauvegarder1 0
MAIN.MAIN;Fichiers.CAF:lvl1_rjz2 0
MAIN.MAIN;Fichiers.CAF:lvl1_rjz2;Fichiers.bloc 0
MAIN.MAIN;Fichiers.CAF:lvl1_rjz2;Fichiers.bloc;Fichiers.bloc.aligner 0
MAIN.MAIN;Fichiers.CAF:taille_bloc 0
MAIN.MAIN;Fichiers.CAF:taille_bloc;Fichiers.taille_bloc 0
MAIN.MAIN;Fichiers.CAF:versGalois 0
MAIN.MAIN;Fichiers.CAF:versGalois;Fichiers.versGalois 0
MAIN.MAIN;Parametres.CAF:n 0
MAIN.MAIN;Parametres.CAF:n;Parametres.n 0
MAIN.MAIN;Parametres.CAF:irreductible 0
MAIN.MAIN;Parametres.CAF:irreductible;Parametres.irreductible 0
MAIN.MAIN;Parametres.CAF:t 0
MAIN.MAIN;Parametres.CAF:t;Parametres.t 0
MAIN.MAIN;Parametres.CAF:racine_generatrice 0
MAIN.MAIN;Parametres.CAF:racine_generatrice;Parametres.racine_generatrice 0
MAIN.MAIN;GHC.Conc.Signal.CAF 0
MAIN.MAIN;GHC.IO.Encoding.CAF 0
MAIN.MAIN;GHC.IO.Encoding.Iconv.CAF 0
MAIN.MAIN;GHC.IO.FD.CAF 0
MAIN.MAIN;GHC.IO.Handle.FD.CAF 0
MAIN.MAIN;GHC.Event.Thread.CAF 0
